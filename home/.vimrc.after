"let g:Powerline_symbols = 'compatible'
let g:airline_powerline_fonts = 1
let g:mustache_abbreviations = 1
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
set fileencoding=utf-8
set t_Co=256 " Explicitly tell Vim that the terminal supports 256 colors

syntax enable
set background=dark
colorscheme railscasts

" Automatically removing all trailing whitespace
fun! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  %s/\t/  /ge
  call cursor(l, c)
endfun

" CtrlP working directory
" https://github.com/kien/ctrlp.vim
let g:ctrlp_root_markers = ['Gemfile', '.git']
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/vendor/bundle/*,*/.bundle/*,*/.git/*,*/doc/app/*,*/spec/reports/*
set wildignore+=*/node_modules/*

autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
au! BufRead,BufNewFile *.hamlc setfiletype haml

" Enable autocomplete
" autocomplete with Ctrl+x, Ctrl+o
filetype plugin on
set omnifunc=syntaxcomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
"autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
"autocmd FileType css set omnifunc=csscomplete#CompleteCSS
"autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags

" Mapping for Tabularize (http://vimcasts.org/episodes/aligning-text-with-tabular-vim)
if exists(":Tabularize")
  nmap <Leader>tab<bar> :Tabularize /<bar><CR>
  vmap <Leader>tab<bar> :Tabularize /<bar><CR>
  nmap <Leader>tab= :Tabularize /=<CR>
  vmap <Leader>tab= :Tabularize /=<CR>
  nmap <Leader>tab: :Tabularize /:\zs<CR>
  vmap <Leader>tab: :Tabularize /:\zs<CR>
endif

" Vim shortcuts for rspec and cucumber tests.vim
" See also https://gist.github.com/Integralist/8115457
" Run currently open RSpec test file
map <Leader>rf :w<cr>:!bundle exec rspec % --format nested<cr>
" Run current RSpec test
" RSpec is clever enough to work out test to run if cursor is on any line within the test
map <Leader>rl :w<cr>:exe "!bundle exec rspec %" . ":" . line(".")<cr>
" Run all RSpec tests
map <Leader>rt :w<cr>:!bundle exec rspec --format nested<cr>
" Run currently open cucumbundle execr feature file
map <Leader>cf :w<cr>:!bundle exec cucumber %<cr>
" Run current cucumber scenario
map <Leader>cl :w<cr>:exe "!bundle exec cucumber %" . ":" . line(".")<cr>
" Run all cucumber feature files
map <Leader>ct :w<cr>:!bundle exec cucumber<cr>
" Run cucumber scenario's marked as wip
map <Leader>cw :w<cr>:!bundle exec cucumber -r features -p wip<cr>

" https://github.com/kurko/smartest.vim
map <leader>t :call RunTestFile()<cr>
map <leader>r :call RunNearestTest()<cr>

" Replace double quotes in opened file with single quotes
map <Leader>"2' :%s/\"\(.\{-}\)\"/\'\1\'/gc<CR>
" Replace single quotes in opened file with double quotes
map <Leader>'2" :%s/\'\(.\{-}\)\'/\"\1\"/gc<CR>

"let g:Powerline_symbols = 'compatible'
let g:airline_powerline_fonts = 1
let g:mustache_abbreviations = 1
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
set fileencoding=utf-8
set t_Co=256 " Explicitly tell Vim that the terminal supports 256 colors

syntax enable
set background=dark
colorscheme railscasts

" Automatically removing all trailing whitespace
fun! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  %s/\t/  /ge
  call cursor(l, c)
endfun

" CtrlP working directory
" https://github.com/kien/ctrlp.vim
let g:ctrlp_root_markers = ['Gemfile', '.git']
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/vendor/bundle/*,*/.bundle/*,*/.git/*,*/doc/app/*,*/spec/reports/*
set wildignore+=*/node_modules/*

autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
au! BufRead,BufNewFile *.hamlc setfiletype haml

" Enable autocomplete
" autocomplete with Ctrl+x, Ctrl+o
filetype plugin on
set omnifunc=syntaxcomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
"autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
"autocmd FileType css set omnifunc=csscomplete#CompleteCSS
"autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags

" Mapping for Tabularize (http://vimcasts.org/episodes/aligning-text-with-tabular-vim)
if exists(":Tabularize")
  nmap <Leader>tab<bar> :Tabularize /<bar><CR>
  vmap <Leader>tab<bar> :Tabularize /<bar><CR>
  nmap <Leader>tab= :Tabularize /=<CR>
  vmap <Leader>tab= :Tabularize /=<CR>
  nmap <Leader>tab: :Tabularize /:\zs<CR>
  vmap <Leader>tab: :Tabularize /:\zs<CR>
endif

" RSpec.vim mappings (https://github.com/thoughtbot/vim-rspec)
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>
